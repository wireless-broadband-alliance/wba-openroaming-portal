APP_ENV=dev
APP_SECRET=4821ac1887ce55493bf79b64ef17c412
DATABASE_URL="mysql://openroaming:openroaming@mysql:3306/openroaming?serverVersion=8&charset=utf8mb4"
DATABASE_FREERADIUS_URL="mysql://admin:admin@example.com:3306/radius?serverVersion=8&charset=utf8mb4"
MESSENGER_TRANSPORT_DSN=doctrine://default?auto_setup=0

MAILER_DSN=smtp://mailcatcher:1025
EMAIL_ADDRESS=openroaming@example.com
SENDER_NAME="Provider Support"

# SAML Specific Settings
SAML_IDP_ENTITY_ID=http://localhost/saml/metadata
SAML_IDP_SSO_URL=https://id.example.com/saml2/idp/SSOService.php
SAML_IDP_X509_CERT=MIIC...
SAML_SP_ENTITY_ID=https://localhost/saml/metadata
SAML_SP_ACS_URL=https://localhost/saml/acs

# LoadBalancing
TRUSTED_PROXIES=192.0.0.1,10.0.0.0/8

SENTRY_DSN=

GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
MICROSOFT_CLIENT_ID=
MICROSOFT_CLIENT_SECRET=

# Budget SMS API URL
BUDGETSMS_API_URL=

# Enable Export Operation from the admin page
EXPORT_USERS=OFF

# Enable Export Operation from the admin page
EXPORT_FREERADIUS_STATISTICS=OFF

###> pixelopen/cloudflare-turnstile-bundle ###
TURNSTILE_KEY=
TURNSTILE_SECRET=
### For testing purposes with cloud flare, please use this link https://developers.cloudflare.com/turnstile/troubleshooting/testing/
###< pixelopen/cloudflare-turnstile-bundle ###

### For delete action on the admin page
### This is the public key PGP (Pretty Good Privacy Key), please make sure to set a valid pgp to encrypt the user data on the delete action
### File Located in "public/resources/public_pgp_key/public_key.asc"
ENABLE_DELETE_USERS_UI=OFF

###> nelmio/cors-bundle ###
CORS_ALLOW_ORIGIN='^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$' # This is required to let the project know which domain is able to use the API.
# For example, this configuration specifies that only when the project is being run on the URL (127.0.0.1 || localhost), it will return data from the endpoint paths, such as the Swagger UI interface.
###< nelmio/cors-bundle ###

###> lexik/jwt-authentication-bundle ###
### required for API logic with authentication keys
## To generate keys run this command: php bin/console lexik:jwt:generate-keypair
## Or if you want more protection please use it with this tag --passphrase=<your_passphrase>
JWT_SECRET_KEY=%kernel.project_dir%/config/jwt/private.pem
JWT_PUBLIC_KEY=%kernel.project_dir%/config/jwt/public.pem
JWT_PASSPHRASE= # Update this to an actual passphrase from tag specified from the command on top
###< lexik/jwt-authentication-bundle ###
