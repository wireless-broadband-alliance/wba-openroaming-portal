image: docker:latest
services:
  - docker:dind
stages:
  - lint
  - test
#  - pr_agent
  - build
#
# pr_agent_job:
#   stage: pr_agent
#   image:
#     name: codiumai/pr-agent:latest
#     entrypoint: [""]
#   script:
#     - cd /app
#     - echo "Running PR Agent action step"
#     - export MR_URL="$CI_MERGE_REQUEST_PROJECT_URL/merge_requests/$CI_MERGE_REQUEST_IID"
#     - echo "MR_URL=$MR_URL"
#     - export gitlab__url=$CI_SERVER_PROTOCOL://$CI_SERVER_FQDN
#     - export gitlab__PERSONAL_ACCESS_TOKEN=$GITLAB_PERSONAL_ACCESS_TOKEN
#     - export config__git_provider="gitlab"
#     - export openai__key=$OPENAI_KEY
#     - python -m pr_agent.cli --pr_url="$MR_URL" describe
#     - python -m pr_agent.cli --pr_url="$MR_URL" review
#     - python -m pr_agent.cli --pr_url="$MR_URL" improve
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
linting-psr12:
  stage: lint
  image: registry.gitlab.com/pipeline-components/php-codesniffer:latest
  script:
    - phpcs -s -p --colors --extensions=php --standard=PSR12 src/

php-security-checker:
  stage: lint
  image: registry.gitlab.com/pipeline-components/php-security-checker:latest
  script:
    - cd ${COMPOSER_LOCATION:-.} && security-checker security:check composer.lock


test-phpstan :
  image : "$CI_REGISTRY_IMAGE:tests"
  allow_failure : false
  before_script:
  - cp .env.sample .env
  - COMPOSER_CACHE_DIR=composer-cache composer install
  script:
  - php -d memory_limit=4G vendor/bin/phpstan analyse .

  stage : test

build_image:
  stage: build
  script:
    - if [ -z "$CI_COMMIT_TAG" ]; then CI_COMMIT_TAG=$CI_COMMIT_SHORT_SHA; fi
    - docker build --build-arg CICDVERSION=$CI_COMMIT_TAG -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

include :
  - template : Security/Dependency-Scanning.gitlab-ci.yml
  - template : Security/Secret-Detection.gitlab-ci.yml
