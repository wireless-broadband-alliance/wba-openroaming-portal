security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        admin_user_provider:
            entity:
                class: App\Entity\User
                property: uuid
        # used to reload user from session & other features (e.g. switch_user)
        user_provider:
            entity:
                class: App\Entity\User
                property: uuid
        saml_provider:
            ##  Basic provider instantiates a user with identifier and default roles
            saml:
                user_class: 'App\Entity\User'
                default_roles: ['ROLE_USER']
    firewalls:
        api:
            pattern: ^/api/
            stateless: true
            jwt: ~
            provider: user_provider
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        dashboard:
            pattern: ^/dashboard
            lazy: true
            provider: admin_user_provider
            custom_authenticators:
                - App\Security\PasswordAuthenticator

            form_login:
                login_path: app_login_admin
                check_path: app_login_admin
                enable_csrf: true
                default_target_path: /dashboard
            logout:
                path: saml_logout
                target: /
            entry_point: form_login

        landing:
            pattern: ^/
            lazy: true
            provider: user_provider
            # Integrate multiple custom authenticators here.
            custom_authenticators:
                - App\Security\PasswordAuthenticator # Password-based authenticator

            # Form login for password-based authentication.
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
            saml:
                identifier_attribute: sAMAccountName
                user_factory: saml_user_factory
                persist_user: true
                use_attribute_friendly_name: true
                check_path: saml_acs
                login_path: saml_login
            # Logout configuration for users with SAML or password authentication.
            logout:
                path: saml_logout
                target: / # Redirect users to the homepage (or another path) after logout
            # Entry point for authentication.
            entry_point: App\Security\AuthenticationEntryPoint
            # enable impersonation (if required in the future)
            # switch_user: true
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/saml/(metadata|login|acs), roles: PUBLIC_ACCESS }
        - { path: ^/api/v1/user, roles: IS_AUTHENTICATED_FULLY }
when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
